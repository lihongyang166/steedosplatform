name: Docker publish to docker.io and ecr

on:
  push:
    tags:
     - 'v**'
jobs:
  docker:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [12.x]
    steps:
      - uses: actions/checkout@v2
      # - name: Use Node.js ${{ matrix.node-version }}
      #   uses: actions/setup-node@v2
      #   with:
      #     node-version: ${{ matrix.node-version }}
      #     cache: "yarn"
      - name: Get branch names
        id: branch-name
        uses: tj-actions/branch-names@v5.2
      
      - uses: web3j/slice-action@v1.3
        if: steps.branch-name.outputs.is_tag == 'true'
        id: tag-name
        with:
          value: ${{steps.branch-name.outputs.tag}}
          start: '1'
          end: '4'
      
      # checkout branch 2.2
      - uses: actions/checkout@v2
        if: steps.tag-name.outputs.result == '2.2'
        with: 
          ref: '2.2'
      
      - uses: docker/setup-qemu-action@v1
      - uses: docker/setup-buildx-action@v1
        with:
          driver-opts: network=host
      - uses: docker/login-action@v1
        name: Login Docker Hub
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Prepare docker image tags
        id: docker_meta
        uses: crazy-max/ghaction-docker-meta@v1
        with:
          images: steedos/steedos-project-template
          tag-custom: 1.x-next
          tag-custom-only: ${{ github.ref == 'refs/heads/1.x' }}
          tag-semver: |
            {{version}}
            {{major}}
            {{major}}.{{minor}}
      
      - name: Delete the latest tag 
        uses: mad9000/actions-find-and-replace-string@2
        id: tags_result
        with:
          source: ${{ steps.docker_meta.outputs.tags }} # this translates to ref/heads/main on the main branch, but can be any arbitrary string 
          find: 'steedos/steedos-project-template:latest'        # we want to remove ref/heads/ from source 
          replace: ''

      - name: Build & Push 2.1
        uses: docker/build-push-action@v2
        if: steps.tag-name.outputs.result == '2.1'
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.docker_meta.outputs.tags }}
          labels: ${{ steps.docker_meta.outputs.labels }}
      
      - name: Build & Push other
        uses: docker/build-push-action@v2
        if: steps.tag-name.outputs.result != '2.1'
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.tags_result.outputs.value }}
          labels: ${{ steps.docker_meta.outputs.labels }}
        
      # - name: Configure AWS credentials
      #   uses: aws-actions/configure-aws-credentials@v1
      #   with:
      #     aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID_NINGXIA }}
      #     aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY_NINGXIA }}
      #     aws-region: cn-northwest-1
      # - name: Login to Amazon ECR
      #   id: login-ecr
      #   uses: aws-actions/amazon-ecr-login@v1
      # - name: Tag and push image to Amazon ECR
      #   env:
      #     ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
      #     IMAGE_TAG: ${{ steps.tag-name.outputs.result }}
      #   run: |
      #     docker pull steedos/steedos-project-template:${{ env.IMAGE_TAG }}
      #     docker tag steedos/steedos-project-template:${{ env.IMAGE_TAG }} ${{ env.ECR_REGISTRY }}/dockerhub/steedos/steedos-project-template:${{github.ref_name}}
      #     docker tag steedos/steedos-project-template:${{ env.IMAGE_TAG }} ${{ env.ECR_REGISTRY }}/dockerhub/steedos/steedos-project-template:latest
      #     docker push ${{ env.ECR_REGISTRY }}/dockerhub/steedos/steedos-project-template:latest
      #     docker push ${{ env.ECR_REGISTRY }}/dockerhub/steedos/steedos-project-template:${{github.ref_name}}